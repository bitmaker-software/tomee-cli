{"service_job_id":null,"service_name":null,"source_files":[{"name":"tomee_cli/utils.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Hildeberto Mendonça <hildeberto.com>\"}\n tomee-cli.utils\n  (:require [clojure.string :refer (split)]))\n\n(defn pretty-output [text]\n  \"Formats a text to be beautifully printed by the repl.\"\n  (loop [out (split text #\"\\n\")]\n    (if (empty? out)\n      \"--------------\"\n      (let [to-print (first out)]\n        (println to-print)\n        (recur (rest out))))))\n\n(defn filename-extension [filename]\n  (let [point-pos (.lastIndexOf filename \".\")]\n    (if (< point-pos 0)\n      nil\n      (.toLowerCase (.substring filename (inc point-pos))))))\n\n(defn filename-from-path [path]\n  \"Identifies and returns a file name present in a path.\"\n  (let [point-pos (.lastIndexOf path \".\")\n        bar-pos   (.lastIndexOf path \"/\")]\n    (if (< point-pos 0)\n      nil\n      (.substring path (inc bar-pos)))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,1,null,0,0,null,0,0,0,null,2,2,2,null,2,null,2,null,2,2,2,null,2]},{"name":"tomee_cli/environment.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>,\n               Hildeberto Mendonça <hildeberto.com>\"}\n tomee-cli.environment\n  (:require [clojure.java.shell :refer (sh)]\n            [clojure.string     :refer (split)]\n            [tomee-cli.utils    :refer (pretty-output)]\n            [environ.core       :refer (env)]))\n\n(def tomee-home (let [env-var (env :tomee-home)]\n                  (if (nil? env-var) \".\" env-var)))\n\n(defn tomee-xml-path\n  ([] (tomee-xml-path tomee-home))\n  ([path] (str path \"/conf/tomee.xml\")))\n\n(defn server-xml-path\n  ([] (server-xml-path tomee-home))\n  ([path] (str path \"/conf/server.xml\")))\n\n(defn windows?\n  \"Verify if the operating system is windows\"\n  []\n  (= (.toLowerCase (System/getProperty \"os.name\")) \"windows\"))\n\n(def extension (if (windows?) \".exe\" \".sh\"))\n\n(defn version\n  \"Prints version numbers of the environment elements\"\n  ([]     (version tomee-home))\n  ([path] (pretty-output (get (sh (str path \"/bin/version\" extension)) :out))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null,2,1,null,2,0,2,null,2,0,0,null,2,null,null,2,null,1,null,2,null,0,0]},{"name":"tomee_cli/resources.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>\"}\n tomee-cli.resources\n  (:require [clojure.xml           :refer (parse)   :as xml]\n            [clojure.java.io       :refer (as-file) :as io]\n            [tomee-cli.environment :refer (tomee-xml-path) :as environment]))\n\n(defn parse-xml\n  [path]\n  (xml/parse\n   (io/as-file path)))\n\n(defn xml-with-out-str\n  [xml-file]\n  (with-out-str\n    (xml/emit xml-file)))\n\n(defn add-resource\n  [path resource]\n  (let [xml-file (parse-xml path)\n        content  (xml-file :content)]\n    (cond\n      (nil? content) (assoc xml-file :content [resource])\n      :else (assoc xml-file :content (concat content [resource])))))\n\n(defn add-new-resource\n  ([path resource-defined]\n   (let [new-tomee-xml (add-resource (environment/tomee-xml-path path) resource-defined)\n         str-new-tomee-xml (xml-with-out-str new-tomee-xml)]\n     (spit (environment/tomee-xml-path path) str-new-tomee-xml)\n     str-new-tomee-xml)))\n\n(defn define-resource\n  [id resource-type content]\n  {:tag :Resource :attrs {:id (str id) :type (str resource-type)} :content [content]})","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,2,null,2,2,null,2,null,2,2,null,2,null,2,2,2,2,2,null,2,null,2,2,2,null,null,2,null,2]},{"name":"tomee_cli/configuration/mail_resource.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>\"}\n tomee-cli.configuration.mail-resource\n  (:require [tomee-cli.resources   :refer (add-resource xml-with-out-str define-resource) :as resource]\n            [tomee-cli.environment :refer (tomee-home) :as environment]))\n\n(defn define-mail-resource\n  \"Define a mail resorce\"\n  [id host port protocol auth user password]\n  (let [content (str \"\\nmail.smtp.host=\" host \"\\nmail.smtp.port=\" port \"\\nmail.transport.protocol=\" protocol \"\\nmail.smtp.auth=\" auth \"\\nmail.smtp.user=\" user \"\\npassword=\" password \"\\n\")]\n    (resource/define-resource id \"javax.mail.Session\" content)))\n\n(defn add-new-mail-resource\n  \"Write mail resource in tomee.xml\"\n  ([id host port protocol auth user password] (add-new-mail-resource environment/tomee-home id host port protocol auth user password))\n  ([path id host port protocol auth user password] (resource/add-new-resource path (define-mail-resource id host port protocol auth user password))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,2,null,null,2,2,null,2,null,2,2]},{"name":"tomee_cli/configuration/database_resource.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>\"}\n tomee-cli.configuration.database-resource\n  (:require [tomee-cli.resources   :refer (add-resource xml-with-out-str define-resource) :as resource]\n            [tomee-cli.environment :refer (tomee-home) :as environment]))\n\n(defn define-datasource-resource\n  \"Define a DataSource resource\"\n  [id jdbc-drive jdbc-url username password jtamanaged]\n  (let [content (str \"\\njdbcDriver=\" jdbc-drive \"\\njdbcUrl=\" jdbc-url \"\\nusername=\" username \"\\npassword=\" password \"\\nJtaManaged=\" jtamanaged \"\\n\")]\n    (resource/define-resource id \"javax.sql.DataSource\" content)))\n\n(defn add-new-datasource-resource\n  \"Write a new DataSource Resource in tomee.xml\"\n  ([id jdbc-drive jdbc-url username password jtamanaged] (add-new-datasource-resource environment/tomee-home id jdbc-drive jdbc-url username password jtamanaged))\n  ([path id jdbc-drive jdbc-url username password jtamanaged] (resource/add-new-resource path (define-datasource-resource id jdbc-drive jdbc-url username password jtamanaged))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,2,null,null,2,2,null,2,null,0,2]},{"name":"tomee_cli/deployment.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Hildeberto Mendonça <hildeberto.com>\"}\n tomee-cli.deployment\n  (:require [clojure.java.io       :refer (as-file copy file delete-file)]\n            [tomee-cli.environment :refer (tomee-home)]\n            [tomee-cli.utils       :refer (filename-extension filename-from-path)]))\n\n(defn copy-file [source-path dest-path]\n  (copy (file source-path) (file dest-path)))\n\n(defn deploy\n  \"Deploys a war/ear file on the server, by copying it to the folder /webapps\n   if the file has the extension .war or to the folder /apps if the file has the extention .ear.\"\n  ([app-file-path] (deploy tomee-home app-file-path))\n  ([tomee-path app-file-path]\n   (let [filename    (filename-from-path app-file-path)\n         extension   (filename-extension (filename-from-path app-file-path))]\n     (cond\n       (= extension \"war\") (let [deploy-path (str tomee-path \"/webapps/\")]\n                             (copy-file app-file-path\n                                        (str deploy-path filename))\n                             (str \"Deployed \" filename \" at \" deploy-path))\n\n       (= extension \"ear\") (let [deploy-path (str tomee-path \"/apps/\")\n                                 filename    (filename-from-path app-file-path)]\n                             (when (not (.exists (as-file deploy-path)))\n                               (.mkdir (as-file deploy-path)))\n                             (copy-file app-file-path\n                                        (str deploy-path filename))\n                             (str \"Deployed \" filename \" at \" deploy-path))\n\n       :else (str \"Error deploying application. File \" filename \" invalid.\")))))\n\n(defn undeploy\n  \"Undeploys a war/ear file from the server by deleting the war file from the folder /webapps\n   or the ear file from the folder /apps.\"\n  ([app-filename] (undeploy tomee-home app-filename))\n  ([tomee-path app-filename]\n   (let [extension (filename-extension app-filename)]\n     (cond\n       (= extension \"war\") (delete-file (str tomee-path \"/webapps/\" app-filename))\n       (= extension \"ear\") (delete-file (str tomee-path \"/apps/\" app-filename))\n       :else (str \"Error undeploying application. File \" (filename-from-path app-filename) \" doesn't exist.\")))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,2,0,null,2,null,null,0,null,0,0,0,0,0,0,0,null,0,0,0,0,0,0,0,null,0,null,2,null,null,0,null,0,0,0,0,0]},{"name":"tomee_cli/execution.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>,\n               Hildeberto Mendonça <hildeberto.com>\"}\n tomee-cli.execution\n  (:require [clojure.java.shell    :refer (sh)]\n            [tomee-cli.environment :refer (tomee-home extension) :as env]))\n\n(defn start\n  \"Startup the Apache TomEE Server\"\n  ([]     (start env/tomee-home))\n  ([tomee-path] (sh (str tomee-path \"/bin/startup\" env/extension))))\n\n(defn stop\n  \"Shutdown the Apache TomEE Server\"\n  ([]     (stop env/tomee-home))\n  ([tomee-path] (sh (str tomee-path \"/bin/shutdown\" env/extension))))\n\n(defn restart\n  \"Shutdown and start the Apache TomEE Server\"\n  ([]     (restart env/tomee-home))\n  ([tomee-path] (do (stop  tomee-path)\n                    (start tomee-path))))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,2,null,0,0,null,2,null,0,0,null,2,null,0,0,0]},{"name":"tomee_cli/core.clj","source":";;Copyright 2015 Bitmaker Software LDA and/or its affiliates and other contributors\n;;as indicated by the @authors tag. All rights reserved.\n;;\n;;Licensed under the Apache License, Version 2.0 (the \"License\");\n;;you may not use this file except in compliance with the License.\n;;You may obtain a copy of the License at\n;;\n;;    http://www.apache.org/licenses/LICENSE-2.0\n;;\n;;Unless required by applicable law or agreed to in writing, software\n;;distributed under the License is distributed on an \"AS IS\" BASIS,\n;;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n;;See the License for the specific language governing permissions and\n;;limitations under the License.\n\n(ns ^{:author \"Daniel Cunha (soro) <daniel.cunha@bitmaker-software.com>,\n               Hildeberto Mendonça <hildeberto.com>\"}\n tomee-cli.core\n  (:require [tomee-cli.configuration.mail-resource :refer (add-new-mail-resource)]\n            [tomee-cli.deployment                  :refer (deploy undeploy)]\n            [tomee-cli.environment                 :refer (version)]\n            [tomee-cli.execution                   :refer (start stop restart)])\n  (:gen-class))","coverage":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1,null,null,null,null,null,null,null]}]}